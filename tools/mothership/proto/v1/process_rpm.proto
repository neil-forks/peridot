// Copyright 2023 Peridot Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package peridot.tools.mothership.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "tools/mothership/proto/v1/entry.proto";

option java_multiple_files = true;
option java_outer_classname = "ProcessRpmProto";
option java_package = "org.resf.peridot.tools.mothership.v1";
option go_package = "go.resf.org/peridot/tools/mothership/pb;mothershippb";

// ProcessRPMRequest is the request message for the ProcessRPM workflow
message ProcessRPMRequest {
  // URI of the RPM to process
  // e.g. gs://bucket/path/to/rpm.rpm
  // The server must have read access to the RPM and WILL error if it does not
  string rpm_uri = 1 [(google.api.field_behavior) = REQUIRED];

  // OS Release of the RPM
  // e.g. Red Hat Enterprise Linux release 8.8 (Ootpa)
  string os_release = 2 [(google.api.field_behavior) = REQUIRED];

  // Self reported checksum of the RPM
  // Must be a SHA256 checksum and match the RPM
  string checksum = 3 [(google.api.field_behavior) = REQUIRED];
}

// ProcessRPMMetadata is the metadata for the ProcessRPM workflow
message ProcessRPMMetadata {
  // The time at which the workflow started
  google.protobuf.Timestamp start_time = 1;

  // The time at which the workflow finished
  google.protobuf.Timestamp end_time = 2;
}

// ProcessRPMResponse is the response message for the ProcessRPM workflow
message ProcessRPMResponse {
  // The entry created for the RPM
  Entry entry = 1;
}

// ImportRPMResponse is the response message for the ImportRPM activity
message ImportRPMResponse {
  // Commit hash of the imported RPM
  // e.g. 1234567890abcdef1234567890abcdef12345678
  string commit_hash = 1 [(google.api.field_behavior) = REQUIRED];
}
