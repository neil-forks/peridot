// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type FilterLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var filterlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func filterlexerLexerInit() {
	staticData := &filterlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'s'", "'='", "'!='", "'<'", "'<='", "'>='", "'>'", "'NOT'", "'AND'",
		"'OR'", "'true'", "'false'", "'null'", "'['", "']'", "'{'", "'}'", "'('",
		"')'", "'.'", "','", "'-'", "'!'", "'?'", "':'", "'+'", "'*'", "'/'",
		"'%'",
	}
	staticData.symbolicNames = []string{
		"", "", "EQUALS", "NOT_EQUALS", "LESS_THAN", "LESS_EQUALS", "GREATER_EQUALS",
		"GREATER_THAN", "NOT", "AND", "OR", "TRUE", "FALSE", "NULL", "LBRACKET",
		"RPRACKET", "LBRACE", "RBRACE", "LPAREN", "RPAREN", "DOT", "COMMA",
		"MINUS", "EXCLAM", "QUESTIONMARK", "COLON", "PLUS", "STAR", "SLASH",
		"PERCENT", "WHITESPACE", "COMMENT", "STRING", "DURATION", "TIMESTAMP",
		"NUM_FLOAT", "NUM_INT", "NUM_UINT", "IDENTIFIER",
	}
	staticData.ruleNames = []string{
		"T__0", "EQUALS", "NOT_EQUALS", "LESS_THAN", "LESS_EQUALS", "GREATER_EQUALS",
		"GREATER_THAN", "NOT", "AND", "OR", "TRUE", "FALSE", "NULL", "LBRACKET",
		"RPRACKET", "LBRACE", "RBRACE", "LPAREN", "RPAREN", "DOT", "COMMA",
		"MINUS", "EXCLAM", "QUESTIONMARK", "COLON", "PLUS", "STAR", "SLASH",
		"PERCENT", "BACKSLASH", "LETTER", "DIGIT", "EXPONENT", "HEXDIGIT", "ESC_SEQ",
		"ESC_CHAR_SEQ", "ESC_OCT_SEQ", "ESC_BYTE_SEQ", "ESC_UNI_SEQ", "WHITESPACE",
		"COMMENT", "STRING", "DURATION", "TIMESTAMP", "NUM_FLOAT", "NUM_INT",
		"NUM_UINT", "IDENTIFIER",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 38, 360, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1,
		23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28,
		1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 3, 32, 182,
		8, 32, 1, 32, 4, 32, 185, 8, 32, 11, 32, 12, 32, 186, 1, 33, 1, 33, 1,
		34, 1, 34, 1, 34, 1, 34, 3, 34, 195, 8, 34, 1, 35, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1,
		38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38,
		1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 3, 38, 228, 8, 38, 1, 39, 4,
		39, 231, 8, 39, 11, 39, 12, 39, 232, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40,
		1, 40, 5, 40, 241, 8, 40, 10, 40, 12, 40, 244, 9, 40, 1, 40, 1, 40, 1,
		41, 1, 41, 1, 41, 5, 41, 251, 8, 41, 10, 41, 12, 41, 254, 9, 41, 1, 41,
		1, 41, 1, 41, 1, 41, 5, 41, 260, 8, 41, 10, 41, 12, 41, 263, 9, 41, 1,
		41, 3, 41, 266, 8, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 3, 42,
		274, 8, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1,
		43, 1, 43, 1, 43, 1, 43, 3, 43, 288, 8, 43, 1, 43, 1, 43, 1, 44, 4, 44,
		293, 8, 44, 11, 44, 12, 44, 294, 1, 44, 1, 44, 4, 44, 299, 8, 44, 11, 44,
		12, 44, 300, 1, 44, 3, 44, 304, 8, 44, 1, 44, 4, 44, 307, 8, 44, 11, 44,
		12, 44, 308, 1, 44, 1, 44, 3, 44, 313, 8, 44, 1, 45, 4, 45, 316, 8, 45,
		11, 45, 12, 45, 317, 1, 45, 1, 45, 1, 45, 1, 45, 4, 45, 324, 8, 45, 11,
		45, 12, 45, 325, 3, 45, 328, 8, 45, 1, 46, 4, 46, 331, 8, 46, 11, 46, 12,
		46, 332, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 4, 46, 341, 8, 46, 11,
		46, 12, 46, 342, 1, 46, 1, 46, 3, 46, 347, 8, 46, 1, 47, 1, 47, 3, 47,
		351, 8, 47, 1, 47, 1, 47, 1, 47, 5, 47, 356, 8, 47, 10, 47, 12, 47, 359,
		9, 47, 0, 0, 48, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 0, 61, 0, 63, 0, 65, 0, 67, 0, 69, 0, 71, 0, 73,
		0, 75, 0, 77, 0, 79, 30, 81, 31, 83, 32, 85, 33, 87, 34, 89, 35, 91, 36,
		93, 37, 95, 38, 1, 0, 11, 2, 0, 65, 90, 97, 122, 2, 0, 69, 69, 101, 101,
		2, 0, 43, 43, 45, 45, 3, 0, 48, 57, 65, 70, 97, 102, 10, 0, 34, 34, 39,
		39, 63, 63, 92, 92, 96, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118,
		118, 2, 0, 88, 88, 120, 120, 3, 0, 9, 10, 12, 13, 32, 32, 1, 0, 10, 10,
		4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92,
		92, 2, 0, 85, 85, 117, 117, 379, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0,
		5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0,
		13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0,
		0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0,
		0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0,
		0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1,
		0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51,
		1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0,
		79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0,
		0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0,
		0, 0, 95, 1, 0, 0, 0, 1, 97, 1, 0, 0, 0, 3, 99, 1, 0, 0, 0, 5, 101, 1,
		0, 0, 0, 7, 104, 1, 0, 0, 0, 9, 106, 1, 0, 0, 0, 11, 109, 1, 0, 0, 0, 13,
		112, 1, 0, 0, 0, 15, 114, 1, 0, 0, 0, 17, 118, 1, 0, 0, 0, 19, 122, 1,
		0, 0, 0, 21, 125, 1, 0, 0, 0, 23, 130, 1, 0, 0, 0, 25, 136, 1, 0, 0, 0,
		27, 141, 1, 0, 0, 0, 29, 143, 1, 0, 0, 0, 31, 145, 1, 0, 0, 0, 33, 147,
		1, 0, 0, 0, 35, 149, 1, 0, 0, 0, 37, 151, 1, 0, 0, 0, 39, 153, 1, 0, 0,
		0, 41, 155, 1, 0, 0, 0, 43, 157, 1, 0, 0, 0, 45, 159, 1, 0, 0, 0, 47, 161,
		1, 0, 0, 0, 49, 163, 1, 0, 0, 0, 51, 165, 1, 0, 0, 0, 53, 167, 1, 0, 0,
		0, 55, 169, 1, 0, 0, 0, 57, 171, 1, 0, 0, 0, 59, 173, 1, 0, 0, 0, 61, 175,
		1, 0, 0, 0, 63, 177, 1, 0, 0, 0, 65, 179, 1, 0, 0, 0, 67, 188, 1, 0, 0,
		0, 69, 194, 1, 0, 0, 0, 71, 196, 1, 0, 0, 0, 73, 199, 1, 0, 0, 0, 75, 204,
		1, 0, 0, 0, 77, 227, 1, 0, 0, 0, 79, 230, 1, 0, 0, 0, 81, 236, 1, 0, 0,
		0, 83, 265, 1, 0, 0, 0, 85, 273, 1, 0, 0, 0, 87, 275, 1, 0, 0, 0, 89, 312,
		1, 0, 0, 0, 91, 327, 1, 0, 0, 0, 93, 346, 1, 0, 0, 0, 95, 350, 1, 0, 0,
		0, 97, 98, 5, 115, 0, 0, 98, 2, 1, 0, 0, 0, 99, 100, 5, 61, 0, 0, 100,
		4, 1, 0, 0, 0, 101, 102, 5, 33, 0, 0, 102, 103, 5, 61, 0, 0, 103, 6, 1,
		0, 0, 0, 104, 105, 5, 60, 0, 0, 105, 8, 1, 0, 0, 0, 106, 107, 5, 60, 0,
		0, 107, 108, 5, 61, 0, 0, 108, 10, 1, 0, 0, 0, 109, 110, 5, 62, 0, 0, 110,
		111, 5, 61, 0, 0, 111, 12, 1, 0, 0, 0, 112, 113, 5, 62, 0, 0, 113, 14,
		1, 0, 0, 0, 114, 115, 5, 78, 0, 0, 115, 116, 5, 79, 0, 0, 116, 117, 5,
		84, 0, 0, 117, 16, 1, 0, 0, 0, 118, 119, 5, 65, 0, 0, 119, 120, 5, 78,
		0, 0, 120, 121, 5, 68, 0, 0, 121, 18, 1, 0, 0, 0, 122, 123, 5, 79, 0, 0,
		123, 124, 5, 82, 0, 0, 124, 20, 1, 0, 0, 0, 125, 126, 5, 116, 0, 0, 126,
		127, 5, 114, 0, 0, 127, 128, 5, 117, 0, 0, 128, 129, 5, 101, 0, 0, 129,
		22, 1, 0, 0, 0, 130, 131, 5, 102, 0, 0, 131, 132, 5, 97, 0, 0, 132, 133,
		5, 108, 0, 0, 133, 134, 5, 115, 0, 0, 134, 135, 5, 101, 0, 0, 135, 24,
		1, 0, 0, 0, 136, 137, 5, 110, 0, 0, 137, 138, 5, 117, 0, 0, 138, 139, 5,
		108, 0, 0, 139, 140, 5, 108, 0, 0, 140, 26, 1, 0, 0, 0, 141, 142, 5, 91,
		0, 0, 142, 28, 1, 0, 0, 0, 143, 144, 5, 93, 0, 0, 144, 30, 1, 0, 0, 0,
		145, 146, 5, 123, 0, 0, 146, 32, 1, 0, 0, 0, 147, 148, 5, 125, 0, 0, 148,
		34, 1, 0, 0, 0, 149, 150, 5, 40, 0, 0, 150, 36, 1, 0, 0, 0, 151, 152, 5,
		41, 0, 0, 152, 38, 1, 0, 0, 0, 153, 154, 5, 46, 0, 0, 154, 40, 1, 0, 0,
		0, 155, 156, 5, 44, 0, 0, 156, 42, 1, 0, 0, 0, 157, 158, 5, 45, 0, 0, 158,
		44, 1, 0, 0, 0, 159, 160, 5, 33, 0, 0, 160, 46, 1, 0, 0, 0, 161, 162, 5,
		63, 0, 0, 162, 48, 1, 0, 0, 0, 163, 164, 5, 58, 0, 0, 164, 50, 1, 0, 0,
		0, 165, 166, 5, 43, 0, 0, 166, 52, 1, 0, 0, 0, 167, 168, 5, 42, 0, 0, 168,
		54, 1, 0, 0, 0, 169, 170, 5, 47, 0, 0, 170, 56, 1, 0, 0, 0, 171, 172, 5,
		37, 0, 0, 172, 58, 1, 0, 0, 0, 173, 174, 5, 92, 0, 0, 174, 60, 1, 0, 0,
		0, 175, 176, 7, 0, 0, 0, 176, 62, 1, 0, 0, 0, 177, 178, 2, 48, 57, 0, 178,
		64, 1, 0, 0, 0, 179, 181, 7, 1, 0, 0, 180, 182, 7, 2, 0, 0, 181, 180, 1,
		0, 0, 0, 181, 182, 1, 0, 0, 0, 182, 184, 1, 0, 0, 0, 183, 185, 3, 63, 31,
		0, 184, 183, 1, 0, 0, 0, 185, 186, 1, 0, 0, 0, 186, 184, 1, 0, 0, 0, 186,
		187, 1, 0, 0, 0, 187, 66, 1, 0, 0, 0, 188, 189, 7, 3, 0, 0, 189, 68, 1,
		0, 0, 0, 190, 195, 3, 71, 35, 0, 191, 195, 3, 75, 37, 0, 192, 195, 3, 77,
		38, 0, 193, 195, 3, 73, 36, 0, 194, 190, 1, 0, 0, 0, 194, 191, 1, 0, 0,
		0, 194, 192, 1, 0, 0, 0, 194, 193, 1, 0, 0, 0, 195, 70, 1, 0, 0, 0, 196,
		197, 3, 59, 29, 0, 197, 198, 7, 4, 0, 0, 198, 72, 1, 0, 0, 0, 199, 200,
		3, 59, 29, 0, 200, 201, 2, 48, 51, 0, 201, 202, 2, 48, 55, 0, 202, 203,
		2, 48, 55, 0, 203, 74, 1, 0, 0, 0, 204, 205, 3, 59, 29, 0, 205, 206, 7,
		5, 0, 0, 206, 207, 3, 67, 33, 0, 207, 208, 3, 67, 33, 0, 208, 76, 1, 0,
		0, 0, 209, 210, 3, 59, 29, 0, 210, 211, 5, 117, 0, 0, 211, 212, 3, 67,
		33, 0, 212, 213, 3, 67, 33, 0, 213, 214, 3, 67, 33, 0, 214, 215, 3, 67,
		33, 0, 215, 228, 1, 0, 0, 0, 216, 217, 3, 59, 29, 0, 217, 218, 5, 85, 0,
		0, 218, 219, 3, 67, 33, 0, 219, 220, 3, 67, 33, 0, 220, 221, 3, 67, 33,
		0, 221, 222, 3, 67, 33, 0, 222, 223, 3, 67, 33, 0, 223, 224, 3, 67, 33,
		0, 224, 225, 3, 67, 33, 0, 225, 226, 3, 67, 33, 0, 226, 228, 1, 0, 0, 0,
		227, 209, 1, 0, 0, 0, 227, 216, 1, 0, 0, 0, 228, 78, 1, 0, 0, 0, 229, 231,
		7, 6, 0, 0, 230, 229, 1, 0, 0, 0, 231, 232, 1, 0, 0, 0, 232, 230, 1, 0,
		0, 0, 232, 233, 1, 0, 0, 0, 233, 234, 1, 0, 0, 0, 234, 235, 6, 39, 0, 0,
		235, 80, 1, 0, 0, 0, 236, 237, 5, 47, 0, 0, 237, 238, 5, 47, 0, 0, 238,
		242, 1, 0, 0, 0, 239, 241, 8, 7, 0, 0, 240, 239, 1, 0, 0, 0, 241, 244,
		1, 0, 0, 0, 242, 240, 1, 0, 0, 0, 242, 243, 1, 0, 0, 0, 243, 245, 1, 0,
		0, 0, 244, 242, 1, 0, 0, 0, 245, 246, 6, 40, 0, 0, 246, 82, 1, 0, 0, 0,
		247, 252, 5, 34, 0, 0, 248, 251, 3, 69, 34, 0, 249, 251, 8, 8, 0, 0, 250,
		248, 1, 0, 0, 0, 250, 249, 1, 0, 0, 0, 251, 254, 1, 0, 0, 0, 252, 250,
		1, 0, 0, 0, 252, 253, 1, 0, 0, 0, 253, 255, 1, 0, 0, 0, 254, 252, 1, 0,
		0, 0, 255, 266, 5, 34, 0, 0, 256, 261, 5, 39, 0, 0, 257, 260, 3, 69, 34,
		0, 258, 260, 8, 9, 0, 0, 259, 257, 1, 0, 0, 0, 259, 258, 1, 0, 0, 0, 260,
		263, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0, 261, 262, 1, 0, 0, 0, 262, 264,
		1, 0, 0, 0, 263, 261, 1, 0, 0, 0, 264, 266, 5, 39, 0, 0, 265, 247, 1, 0,
		0, 0, 265, 256, 1, 0, 0, 0, 266, 84, 1, 0, 0, 0, 267, 268, 3, 91, 45, 0,
		268, 269, 5, 115, 0, 0, 269, 274, 1, 0, 0, 0, 270, 271, 3, 89, 44, 0, 271,
		272, 5, 115, 0, 0, 272, 274, 1, 0, 0, 0, 273, 267, 1, 0, 0, 0, 273, 270,
		1, 0, 0, 0, 274, 86, 1, 0, 0, 0, 275, 276, 3, 91, 45, 0, 276, 277, 5, 45,
		0, 0, 277, 278, 3, 91, 45, 0, 278, 279, 5, 45, 0, 0, 279, 280, 3, 91, 45,
		0, 280, 281, 5, 84, 0, 0, 281, 282, 3, 91, 45, 0, 282, 283, 5, 58, 0, 0,
		283, 284, 3, 91, 45, 0, 284, 287, 5, 58, 0, 0, 285, 288, 3, 91, 45, 0,
		286, 288, 3, 89, 44, 0, 287, 285, 1, 0, 0, 0, 287, 286, 1, 0, 0, 0, 288,
		289, 1, 0, 0, 0, 289, 290, 5, 90, 0, 0, 290, 88, 1, 0, 0, 0, 291, 293,
		3, 63, 31, 0, 292, 291, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 292, 1,
		0, 0, 0, 294, 295, 1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 296, 298, 5, 46, 0,
		0, 297, 299, 3, 63, 31, 0, 298, 297, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0,
		300, 298, 1, 0, 0, 0, 300, 301, 1, 0, 0, 0, 301, 303, 1, 0, 0, 0, 302,
		304, 3, 65, 32, 0, 303, 302, 1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304, 313,
		1, 0, 0, 0, 305, 307, 3, 63, 31, 0, 306, 305, 1, 0, 0, 0, 307, 308, 1,
		0, 0, 0, 308, 306, 1, 0, 0, 0, 308, 309, 1, 0, 0, 0, 309, 310, 1, 0, 0,
		0, 310, 311, 3, 65, 32, 0, 311, 313, 1, 0, 0, 0, 312, 292, 1, 0, 0, 0,
		312, 306, 1, 0, 0, 0, 313, 90, 1, 0, 0, 0, 314, 316, 3, 63, 31, 0, 315,
		314, 1, 0, 0, 0, 316, 317, 1, 0, 0, 0, 317, 315, 1, 0, 0, 0, 317, 318,
		1, 0, 0, 0, 318, 328, 1, 0, 0, 0, 319, 320, 5, 48, 0, 0, 320, 321, 5, 120,
		0, 0, 321, 323, 1, 0, 0, 0, 322, 324, 3, 67, 33, 0, 323, 322, 1, 0, 0,
		0, 324, 325, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 325, 326, 1, 0, 0, 0, 326,
		328, 1, 0, 0, 0, 327, 315, 1, 0, 0, 0, 327, 319, 1, 0, 0, 0, 328, 92, 1,
		0, 0, 0, 329, 331, 3, 63, 31, 0, 330, 329, 1, 0, 0, 0, 331, 332, 1, 0,
		0, 0, 332, 330, 1, 0, 0, 0, 332, 333, 1, 0, 0, 0, 333, 334, 1, 0, 0, 0,
		334, 335, 7, 10, 0, 0, 335, 347, 1, 0, 0, 0, 336, 337, 5, 48, 0, 0, 337,
		338, 5, 120, 0, 0, 338, 340, 1, 0, 0, 0, 339, 341, 3, 67, 33, 0, 340, 339,
		1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 342, 343, 1, 0,
		0, 0, 343, 344, 1, 0, 0, 0, 344, 345, 7, 10, 0, 0, 345, 347, 1, 0, 0, 0,
		346, 330, 1, 0, 0, 0, 346, 336, 1, 0, 0, 0, 347, 94, 1, 0, 0, 0, 348, 351,
		3, 61, 30, 0, 349, 351, 5, 95, 0, 0, 350, 348, 1, 0, 0, 0, 350, 349, 1,
		0, 0, 0, 351, 357, 1, 0, 0, 0, 352, 356, 3, 61, 30, 0, 353, 356, 3, 63,
		31, 0, 354, 356, 5, 95, 0, 0, 355, 352, 1, 0, 0, 0, 355, 353, 1, 0, 0,
		0, 355, 354, 1, 0, 0, 0, 356, 359, 1, 0, 0, 0, 357, 355, 1, 0, 0, 0, 357,
		358, 1, 0, 0, 0, 358, 96, 1, 0, 0, 0, 359, 357, 1, 0, 0, 0, 28, 0, 181,
		186, 194, 227, 232, 242, 250, 252, 259, 261, 265, 273, 287, 294, 300, 303,
		308, 312, 317, 325, 327, 332, 342, 346, 350, 355, 357, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// FilterLexerInit initializes any static state used to implement FilterLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewFilterLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func FilterLexerInit() {
	staticData := &filterlexerLexerStaticData
	staticData.once.Do(filterlexerLexerInit)
}

// NewFilterLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewFilterLexer(input antlr.CharStream) *FilterLexer {
	FilterLexerInit()
	l := new(FilterLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &filterlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Filter.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FilterLexer tokens.
const (
	FilterLexerT__0           = 1
	FilterLexerEQUALS         = 2
	FilterLexerNOT_EQUALS     = 3
	FilterLexerLESS_THAN      = 4
	FilterLexerLESS_EQUALS    = 5
	FilterLexerGREATER_EQUALS = 6
	FilterLexerGREATER_THAN   = 7
	FilterLexerNOT            = 8
	FilterLexerAND            = 9
	FilterLexerOR             = 10
	FilterLexerTRUE           = 11
	FilterLexerFALSE          = 12
	FilterLexerNULL           = 13
	FilterLexerLBRACKET       = 14
	FilterLexerRPRACKET       = 15
	FilterLexerLBRACE         = 16
	FilterLexerRBRACE         = 17
	FilterLexerLPAREN         = 18
	FilterLexerRPAREN         = 19
	FilterLexerDOT            = 20
	FilterLexerCOMMA          = 21
	FilterLexerMINUS          = 22
	FilterLexerEXCLAM         = 23
	FilterLexerQUESTIONMARK   = 24
	FilterLexerCOLON          = 25
	FilterLexerPLUS           = 26
	FilterLexerSTAR           = 27
	FilterLexerSLASH          = 28
	FilterLexerPERCENT        = 29
	FilterLexerWHITESPACE     = 30
	FilterLexerCOMMENT        = 31
	FilterLexerSTRING         = 32
	FilterLexerDURATION       = 33
	FilterLexerTIMESTAMP      = 34
	FilterLexerNUM_FLOAT      = 35
	FilterLexerNUM_INT        = 36
	FilterLexerNUM_UINT       = 37
	FilterLexerIDENTIFIER     = 38
)
