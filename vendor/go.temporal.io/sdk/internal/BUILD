load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "internal",
    srcs = [
        "activity.go",
        "client.go",
        "context.go",
        "encode_args.go",
        "error.go",
        "failure_converter.go",
        "grpc_dialer.go",
        "headers.go",
        "interceptor.go",
        "interceptor_base.go",
        "interceptor_header.go",
        "internal_activity.go",
        "internal_command_state_machine.go",
        "internal_eager_activity.go",
        "internal_event_handlers.go",
        "internal_logging_tags.go",
        "internal_pressure_points.go",
        "internal_public.go",
        "internal_retry.go",
        "internal_schedule_client.go",
        "internal_task_handlers.go",
        "internal_task_pollers.go",
        "internal_time.go",
        "internal_utils.go",
        "internal_worker.go",
        "internal_worker_base.go",
        "internal_worker_cache.go",
        "internal_workflow.go",
        "internal_workflow_client.go",
        "internal_workflow_testsuite.go",
        "schedule_client.go",
        "session.go",
        "version.go",
        "worker.go",
        "workflow.go",
        "workflow_deadlock.go",
        "workflow_testsuite.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/sdk/internal",
    importpath = "go.temporal.io/sdk/internal",
    visibility = [
        "//third_party:__subpackages__",
        "//vendor/go.temporal.io/sdk:__subpackages__",
    ],
    deps = [
        "//vendor/github.com/facebookgo/clock",
        "//vendor/github.com/gogo/protobuf/jsonpb",
        "//vendor/github.com/gogo/protobuf/proto",
        "//vendor/github.com/gogo/protobuf/types",
        "//vendor/github.com/gogo/status",
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/retry",
        "//vendor/github.com/pborman/uuid",
        "//vendor/github.com/robfig/cron",
        "//vendor/github.com/stretchr/testify/mock",
        "//vendor/go.temporal.io/api/command/v1:command",
        "//vendor/go.temporal.io/api/common/v1:common",
        "//vendor/go.temporal.io/api/enums/v1:enums",
        "//vendor/go.temporal.io/api/failure/v1:failure",
        "//vendor/go.temporal.io/api/history/v1:history",
        "//vendor/go.temporal.io/api/interaction/v1:interaction",
        "//vendor/go.temporal.io/api/operatorservice/v1:operatorservice",
        "//vendor/go.temporal.io/api/query/v1:query",
        "//vendor/go.temporal.io/api/schedule/v1:schedule",
        "//vendor/go.temporal.io/api/serviceerror",
        "//vendor/go.temporal.io/api/taskqueue/v1:taskqueue",
        "//vendor/go.temporal.io/api/workflow/v1:workflow",
        "//vendor/go.temporal.io/api/workflowservice/v1:workflowservice",
        "//vendor/go.temporal.io/api/workflowservicemock/v1:workflowservicemock",
        "//vendor/go.temporal.io/sdk/converter",
        "//vendor/go.temporal.io/sdk/internal/common",
        "//vendor/go.temporal.io/sdk/internal/common/backoff",
        "//vendor/go.temporal.io/sdk/internal/common/cache",
        "//vendor/go.temporal.io/sdk/internal/common/metrics",
        "//vendor/go.temporal.io/sdk/internal/common/retry",
        "//vendor/go.temporal.io/sdk/internal/common/serializer",
        "//vendor/go.temporal.io/sdk/internal/common/util",
        "//vendor/go.temporal.io/sdk/internal/log",
        "//vendor/go.temporal.io/sdk/log",
        "//vendor/go.uber.org/atomic",
        "//vendor/golang.org/x/time/rate",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//backoff",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//keepalive",
        "@org_golang_google_grpc//metadata",
    ],
)
