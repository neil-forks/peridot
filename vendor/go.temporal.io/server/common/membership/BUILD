load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "membership",
    srcs = [
        "grpc_resolver.go",
        "hostinfo.go",
        "hostinfo_provider.go",
        "interfaces.go",
        "interfaces_mock.go",
        "ringpop.go",
        "rpMonitor.go",
        "rpServiceResolver.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/common/membership",
    importpath = "go.temporal.io/server/common/membership",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/dgryski/go-farm",
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/pborman/uuid",
        "//vendor/github.com/temporalio/ringpop-go",
        "//vendor/github.com/temporalio/ringpop-go/discovery/statichosts",
        "//vendor/github.com/temporalio/ringpop-go/events",
        "//vendor/github.com/temporalio/ringpop-go/hashring",
        "//vendor/github.com/temporalio/ringpop-go/swim",
        "//vendor/github.com/temporalio/tchannel-go",
        "//vendor/go.temporal.io/api/serviceerror",
        "//vendor/go.temporal.io/server/common",
        "//vendor/go.temporal.io/server/common/backoff",
        "//vendor/go.temporal.io/server/common/convert",
        "//vendor/go.temporal.io/server/common/headers",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/persistence",
        "//vendor/go.temporal.io/server/common/primitives",
        "//vendor/go.uber.org/fx",
        "@org_golang_google_grpc//resolver",
    ],
)
