load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "metrics",
    srcs = [
        "common.go",
        "config.go",
        "defs.go",
        "fx.go",
        "grpc.go",
        "metric_defs.go",
        "metrics.go",
        "metrics_mock.go",
        "noop_impl.go",
        "opentelemetry_aggregator_selector.go",
        "opentelemetry_provider.go",
        "otel_metrics_handler.go",
        "runtime.go",
        "tags.go",
        "tally_metrics_handler.go",
        "temporal_queues.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/common/metrics",
    importpath = "go.temporal.io/server/common/metrics",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/cactus/go-statsd-client/statsd",
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/uber-go/tally/v4:tally",
        "//vendor/github.com/uber-go/tally/v4/m3",
        "//vendor/github.com/uber-go/tally/v4/prometheus",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.opentelemetry.io/otel/exporters/prometheus",
        "//vendor/go.opentelemetry.io/otel/metric",
        "//vendor/go.opentelemetry.io/otel/metric/instrument",
        "//vendor/go.opentelemetry.io/otel/metric/unit",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/aggregator",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/aggregator/histogram",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/aggregator/lastvalue",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/aggregator/sum",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/controller/basic",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/export",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/export/aggregation",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/processor/basic",
        "//vendor/go.opentelemetry.io/otel/sdk/metric/sdkapi",
        "//vendor/go.opentelemetry.io/otel/sdk/resource",
        "//vendor/go.temporal.io/api/enums/v1:enums",
        "//vendor/go.temporal.io/server/api/metrics/v1:metrics",
        "//vendor/go.temporal.io/server/common/build",
        "//vendor/go.temporal.io/server/common/headers",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/metrics/tally/statsd",
        "//vendor/go.temporal.io/server/common/primitives",
        "//vendor/go.uber.org/fx",
        "//vendor/golang.org/x/exp/maps",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//metadata",
    ],
)
