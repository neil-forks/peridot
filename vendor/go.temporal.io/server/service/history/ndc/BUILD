load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "ndc",
    srcs = [
        "activity_replicator.go",
        "activity_replicator_mock.go",
        "branch_manager.go",
        "branch_manager_mock.go",
        "conflict_resolver.go",
        "conflict_resolver_mock.go",
        "constants.go",
        "events_reapplier.go",
        "events_reapplier_mock.go",
        "history_replicator.go",
        "replication_task.go",
        "resetter.go",
        "state_rebuilder.go",
        "state_rebuilder_mock.go",
        "transaction_manager.go",
        "transaction_manager_existing_workflow.go",
        "transaction_manager_existing_workflow_mock.go",
        "transaction_manager_mock.go",
        "transaction_manager_new_workflow.go",
        "transaction_manager_new_workflow_mock.go",
        "workflow.go",
        "workflow_mock.go",
        "workflow_resetter.go",
        "workflow_resetter_mock.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/service/history/ndc",
    importpath = "go.temporal.io/server/service/history/ndc",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/pborman/uuid",
        "//vendor/go.temporal.io/api/common/v1:common",
        "//vendor/go.temporal.io/api/enums/v1:enums",
        "//vendor/go.temporal.io/api/history/v1:history",
        "//vendor/go.temporal.io/api/serviceerror",
        "//vendor/go.temporal.io/server/api/adminservice/v1:adminservice",
        "//vendor/go.temporal.io/server/api/enums/v1:enums",
        "//vendor/go.temporal.io/server/api/history/v1:history",
        "//vendor/go.temporal.io/server/api/historyservice/v1:historyservice",
        "//vendor/go.temporal.io/server/api/persistence/v1:persistence",
        "//vendor/go.temporal.io/server/common",
        "//vendor/go.temporal.io/server/common/cluster",
        "//vendor/go.temporal.io/server/common/collection",
        "//vendor/go.temporal.io/server/common/convert",
        "//vendor/go.temporal.io/server/common/definition",
        "//vendor/go.temporal.io/server/common/failure",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/metrics",
        "//vendor/go.temporal.io/server/common/namespace",
        "//vendor/go.temporal.io/server/common/payloads",
        "//vendor/go.temporal.io/server/common/persistence",
        "//vendor/go.temporal.io/server/common/persistence/serialization",
        "//vendor/go.temporal.io/server/common/persistence/versionhistory",
        "//vendor/go.temporal.io/server/common/primitives/timestamp",
        "//vendor/go.temporal.io/server/common/serviceerror",
        "//vendor/go.temporal.io/server/common/util",
        "//vendor/go.temporal.io/server/service/history/consts",
        "//vendor/go.temporal.io/server/service/history/events",
        "//vendor/go.temporal.io/server/service/history/shard",
        "//vendor/go.temporal.io/server/service/history/tasks",
        "//vendor/go.temporal.io/server/service/history/workflow",
        "//vendor/golang.org/x/exp/slices",
    ],
)
