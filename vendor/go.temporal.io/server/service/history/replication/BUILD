load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "replication",
    srcs = [
        "ack_manager.go",
        "ack_manager_mock.go",
        "dlq_handler.go",
        "dlq_handler_mock.go",
        "fx.go",
        "task_executor.go",
        "task_executor_mock.go",
        "task_fetcher.go",
        "task_fetcher_mock.go",
        "task_processor.go",
        "task_processor_manager.go",
        "task_processor_mock.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/service/history/replication",
    importpath = "go.temporal.io/server/service/history/replication",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/go.temporal.io/api/common/v1:common",
        "//vendor/go.temporal.io/api/serviceerror",
        "//vendor/go.temporal.io/server/api/adminservice/v1:adminservice",
        "//vendor/go.temporal.io/server/api/enums/v1:enums",
        "//vendor/go.temporal.io/server/api/history/v1:history",
        "//vendor/go.temporal.io/server/api/historyservice/v1:historyservice",
        "//vendor/go.temporal.io/server/api/persistence/v1:persistence",
        "//vendor/go.temporal.io/server/api/replication/v1:replication",
        "//vendor/go.temporal.io/server/client",
        "//vendor/go.temporal.io/server/common",
        "//vendor/go.temporal.io/server/common/backoff",
        "//vendor/go.temporal.io/server/common/cluster",
        "//vendor/go.temporal.io/server/common/collection",
        "//vendor/go.temporal.io/server/common/convert",
        "//vendor/go.temporal.io/server/common/definition",
        "//vendor/go.temporal.io/server/common/headers",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/metrics",
        "//vendor/go.temporal.io/server/common/namespace",
        "//vendor/go.temporal.io/server/common/persistence",
        "//vendor/go.temporal.io/server/common/persistence/serialization",
        "//vendor/go.temporal.io/server/common/persistence/versionhistory",
        "//vendor/go.temporal.io/server/common/primitives/timestamp",
        "//vendor/go.temporal.io/server/common/quotas",
        "//vendor/go.temporal.io/server/common/rpc",
        "//vendor/go.temporal.io/server/common/serviceerror",
        "//vendor/go.temporal.io/server/common/xdc",
        "//vendor/go.temporal.io/server/service/history/configs",
        "//vendor/go.temporal.io/server/service/history/shard",
        "//vendor/go.temporal.io/server/service/history/tasks",
        "//vendor/go.temporal.io/server/service/history/workflow",
        "//vendor/go.uber.org/fx",
        "//vendor/golang.org/x/exp/maps",
    ],
)
