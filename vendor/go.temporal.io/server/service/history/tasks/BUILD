load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "tasks",
    srcs = [
        "activity_replication_task.go",
        "activity_retry_timer.go",
        "activity_task.go",
        "activity_task_timer.go",
        "category.go",
        "child_workflow_task.go",
        "close_task.go",
        "close_visibility_task.go",
        "delete_execution_task.go",
        "delete_visibility_task.go",
        "fake_task.go",
        "history_replication_task.go",
        "key.go",
        "predicates.go",
        "requst_cancel_task.go",
        "reset_task.go",
        "signal_task.go",
        "start_visibility_task.go",
        "sync_workflow_state_task.go",
        "task.go",
        "task_mock.go",
        "upsert_visibility_task.go",
        "user_timer.go",
        "utils.go",
        "workflow_cleanup_timer.go",
        "workflow_delay_timer.go",
        "workflow_task.go",
        "workflow_task_timer.go",
        "workflow_timer.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/service/history/tasks",
    importpath = "go.temporal.io/server/service/history/tasks",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/go.temporal.io/api/enums/v1:enums",
        "//vendor/go.temporal.io/api/serviceerror",
        "//vendor/go.temporal.io/server/api/enums/v1:enums",
        "//vendor/go.temporal.io/server/common",
        "//vendor/go.temporal.io/server/common/definition",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/predicates",
        "//vendor/golang.org/x/exp/maps",
    ],
)
