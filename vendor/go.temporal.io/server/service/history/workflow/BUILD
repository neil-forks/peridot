load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "workflow",
    srcs = [
        "cache.go",
        "cache_mock.go",
        "checksum.go",
        "context.go",
        "context_mock.go",
        "delete_manager.go",
        "delete_manager_mock.go",
        "fx.go",
        "history_builder.go",
        "metrics.go",
        "mutable_state.go",
        "mutable_state_impl.go",
        "mutable_state_mock.go",
        "mutable_state_rebuilder.go",
        "mutable_state_rebuilder_mock.go",
        "mutable_state_state_status.go",
        "mutable_state_util.go",
        "query.go",
        "query_registry.go",
        "retry.go",
        "task_generator.go",
        "task_generator_mock.go",
        "task_generator_provider.go",
        "task_refresher.go",
        "task_refresher_mock.go",
        "test_util.go",
        "timer_sequence.go",
        "timer_sequence_mock.go",
        "transaction.go",
        "transaction_impl.go",
        "transaction_mock.go",
        "util.go",
        "workflow_task_state_machine.go",
        "workflow_task_state_machine_mock.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/service/history/workflow",
    importpath = "go.temporal.io/server/service/history/workflow",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/pborman/uuid",
        "//vendor/go.temporal.io/api/command/v1:command",
        "//vendor/go.temporal.io/api/common/v1:common",
        "//vendor/go.temporal.io/api/enums/v1:enums",
        "//vendor/go.temporal.io/api/failure/v1:failure",
        "//vendor/go.temporal.io/api/history/v1:history",
        "//vendor/go.temporal.io/api/query/v1:query",
        "//vendor/go.temporal.io/api/serviceerror",
        "//vendor/go.temporal.io/api/taskqueue/v1:taskqueue",
        "//vendor/go.temporal.io/api/workflow/v1:workflow",
        "//vendor/go.temporal.io/api/workflowservice/v1:workflowservice",
        "//vendor/go.temporal.io/server/api/adminservice/v1:adminservice",
        "//vendor/go.temporal.io/server/api/checksum/v1:checksum",
        "//vendor/go.temporal.io/server/api/clock/v1:clock",
        "//vendor/go.temporal.io/server/api/enums/v1:enums",
        "//vendor/go.temporal.io/server/api/history/v1:history",
        "//vendor/go.temporal.io/server/api/historyservice/v1:historyservice",
        "//vendor/go.temporal.io/server/api/persistence/v1:persistence",
        "//vendor/go.temporal.io/server/api/workflow/v1:workflow",
        "//vendor/go.temporal.io/server/common",
        "//vendor/go.temporal.io/server/common/backoff",
        "//vendor/go.temporal.io/server/common/cache",
        "//vendor/go.temporal.io/server/common/checksum",
        "//vendor/go.temporal.io/server/common/clock",
        "//vendor/go.temporal.io/server/common/cluster",
        "//vendor/go.temporal.io/server/common/convert",
        "//vendor/go.temporal.io/server/common/definition",
        "//vendor/go.temporal.io/server/common/enums",
        "//vendor/go.temporal.io/server/common/locks",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/metrics",
        "//vendor/go.temporal.io/server/common/namespace",
        "//vendor/go.temporal.io/server/common/payload",
        "//vendor/go.temporal.io/server/common/persistence",
        "//vendor/go.temporal.io/server/common/persistence/versionhistory",
        "//vendor/go.temporal.io/server/common/persistence/visibility",
        "//vendor/go.temporal.io/server/common/primitives",
        "//vendor/go.temporal.io/server/common/primitives/timestamp",
        "//vendor/go.temporal.io/server/common/rpc",
        "//vendor/go.temporal.io/server/common/searchattribute",
        "//vendor/go.temporal.io/server/common/util",
        "//vendor/go.temporal.io/server/service/history/configs",
        "//vendor/go.temporal.io/server/service/history/consts",
        "//vendor/go.temporal.io/server/service/history/events",
        "//vendor/go.temporal.io/server/service/history/shard",
        "//vendor/go.temporal.io/server/service/history/tasks",
        "//vendor/go.temporal.io/server/service/history/tests",
        "//vendor/go.temporal.io/server/service/worker/archiver",
        "//vendor/go.uber.org/fx",
        "//vendor/golang.org/x/exp/maps",
        "//vendor/golang.org/x/exp/slices",
    ],
)
