load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "temporal",
    srcs = [
        "fx.go",
        "interrupt.go",
        "server.go",
        "server_impl.go",
        "server_option.go",
        "server_options.go",
    ],
    importmap = "go.resf.org/peridot/vendor/go.temporal.io/server/temporal",
    importpath = "go.temporal.io/server/temporal",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/pborman/uuid",
        "//vendor/go.opentelemetry.io/otel",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.opentelemetry.io/otel/propagation",
        "//vendor/go.opentelemetry.io/otel/sdk/resource",
        "//vendor/go.opentelemetry.io/otel/sdk/trace",
        "//vendor/go.opentelemetry.io/otel/semconv/v1.10.0:v1_10_0",
        "//vendor/go.opentelemetry.io/otel/trace",
        "//vendor/go.temporal.io/server/api/persistence/v1:persistence",
        "//vendor/go.temporal.io/server/client",
        "//vendor/go.temporal.io/server/common/authorization",
        "//vendor/go.temporal.io/server/common/cluster",
        "//vendor/go.temporal.io/server/common/collection",
        "//vendor/go.temporal.io/server/common/config",
        "//vendor/go.temporal.io/server/common/dynamicconfig",
        "//vendor/go.temporal.io/server/common/headers",
        "//vendor/go.temporal.io/server/common/log",
        "//vendor/go.temporal.io/server/common/log/tag",
        "//vendor/go.temporal.io/server/common/metrics",
        "//vendor/go.temporal.io/server/common/persistence",
        "//vendor/go.temporal.io/server/common/persistence/cassandra",
        "//vendor/go.temporal.io/server/common/persistence/client",
        "//vendor/go.temporal.io/server/common/persistence/sql",
        "//vendor/go.temporal.io/server/common/persistence/visibility/store/elasticsearch/client",
        "//vendor/go.temporal.io/server/common/pprof",
        "//vendor/go.temporal.io/server/common/primitives",
        "//vendor/go.temporal.io/server/common/resolver",
        "//vendor/go.temporal.io/server/common/resource",
        "//vendor/go.temporal.io/server/common/ringpop",
        "//vendor/go.temporal.io/server/common/rpc/encryption",
        "//vendor/go.temporal.io/server/common/searchattribute",
        "//vendor/go.temporal.io/server/common/telemetry",
        "//vendor/go.temporal.io/server/service/frontend",
        "//vendor/go.temporal.io/server/service/history",
        "//vendor/go.temporal.io/server/service/history/replication",
        "//vendor/go.temporal.io/server/service/history/workflow",
        "//vendor/go.temporal.io/server/service/matching",
        "//vendor/go.temporal.io/server/service/worker",
        "//vendor/go.uber.org/fx",
        "//vendor/go.uber.org/fx/fxevent",
        "//vendor/golang.org/x/exp/slices",
        "@org_golang_google_grpc//:go_default_library",
    ],
)
